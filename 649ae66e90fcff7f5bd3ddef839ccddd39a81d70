{
  "comments": [
    {
      "key": {
        "uuid": "11480a1a_936bd91b",
        "filename": "utils.hpp",
        "patchSetId": 2
      },
      "lineNbr": 73,
      "author": {
        "id": 1000338
      },
      "writtenOn": "2021-07-19T10:14:55Z",
      "side": 1,
      "message": "Should this also include a std::is_enum check on T? I see we\u0027d throw anyway if convert_from_string fails, so maybe not?",
      "revId": "649ae66e90fcff7f5bd3ddef839ccddd39a81d70",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "386f2a8b_cdcb676f",
        "filename": "utils.hpp",
        "patchSetId": 2
      },
      "lineNbr": 73,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-07-21T18:47:16Z",
      "side": 1,
      "message": "I don\u0027t think the is_enum check is necessary.  In the future we could support additional conversions within sdbusplus and this code should automatically handle them.",
      "parentUuid": "11480a1a_936bd91b",
      "revId": "649ae66e90fcff7f5bd3ddef839ccddd39a81d70",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d09c778b_5fd7d322",
        "filename": "utils.hpp",
        "patchSetId": 2
      },
      "lineNbr": 73,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-07-21T20:05:01Z",
      "side": 1,
      "message": "There were test cases that ended up calling this function with an int.  I ended up writing a little helper template to determine if `sdbusplus::message::convert_from_string` exists for the type and if not it will use the default version from 33.  So similar to what you suggested of \u0027std::is_enum\u0027 but a little more robust.",
      "parentUuid": "386f2a8b_cdcb676f",
      "revId": "649ae66e90fcff7f5bd3ddef839ccddd39a81d70",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7891959_4f2efd7f",
        "filename": "utils.hpp",
        "patchSetId": 2
      },
      "lineNbr": 88,
      "author": {
        "id": 1000338
      },
      "writtenOn": "2021-07-19T10:14:55Z",
      "side": 1,
      "message": "Is this return needed?",
      "revId": "649ae66e90fcff7f5bd3ddef839ccddd39a81d70",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "96c4e40c_57a419cf",
        "filename": "utils.hpp",
        "patchSetId": 2
      },
      "lineNbr": 88,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-07-21T18:47:16Z",
      "side": 1,
      "message": "Yes, unfortunately.  Without it the compiler gets upset that the return type is different between 81 and 88 and fails to compile (cannot deduce \u0027auto\u0027 type).",
      "parentUuid": "f7891959_4f2efd7f",
      "revId": "649ae66e90fcff7f5bd3ddef839ccddd39a81d70",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}